#           name    cookie id
/* CLASS */ pyAvidemux : void : ADM_PYID_AVIDEMUX
#              cname:pyname
# Basic action load, handle seg, getInfo
/* METHOD */ int editor->openFile:loadVideo          (str fileName)
/* METHOD */ int editor->clearSegment:clearSegments  (void)
/* METHOD */ int editor->appendFile:appendVideo      (str fileName)
/* METHOD */ void editor->closeFile:closeVideo       (void)
/* METHOD */ int editor->isFileOpen:isFileOpen       (void)
/* METHOD */ int editor->addSegment:addSegment        (int ref, double startRef, double duration)
/* METHOD */ int editor->setPostProc:setPostProc      (int type, int strength, int swapuv)
/* METHOD */ int editor->setHDRConfig:setHDRConfig    (int toneMappingMethod, double saturationAdjust, double boostAdjust, int adaptiveRGB, int gamutMethod)
/* METHOD */ int pyGetWidth:getWidth            (void)
/* METHOD */ int pyGetHeight:getHeight          (void)
/* METHOD */ int editor->getPARWidth:getPARWidth      (void)
/* METHOD */ int editor->getPARHeight:getPARHeight    (void)
/* METHOD */ int pyGetFps1000:getFps1000        (void)
/* METHOD */ str editor->getVideoCodec:getVideoCodec(void)
/* METHOD */ str pyGetContainerEx:getOutputExtension(void)
/* METHOD */ void editor->clearFilters:clearVideoFilters(void) 
/* METHOD */ int pyVersion:pyVersion        (void)
#
# Audio filter and encoding 
#
/* METHOD */ void editor->resetAudioFilter:audioResetFilter        (int track)
/* METHOD */ int  editor->setAudioMixer:audioSetMixer        (int track,str channelConfig)
/* METHOD */ int  pySetResample:audioSetResample             (int track,int freq)
/* METHOD */ int  pyGetResample:audioGetResample             (int track)
/* METHOD */ int  pyAddAudioTrack:audioAddTrack  (int track)
/* METHOD */ int  pyAddExternal:audioAddExternal (str fileName)
/* METHOD */ int  editor->audioSetAudioPoolLanguage:setSourceTrackLanguage(int track,str language)
/* METHOD */ int  pyClearAudioTracks:audioClearTracks(void) 
/* METHOD */ int  pySetPal2Film:audioSetPal2Film(int track,int enable)
/* METHOD */ int  pySetFilm2Pal:audioSetFilm2Pal(int track,int enable)
/* METHOD */ int  pySetCustomAudioFrameRate:audioSetCustomFrameRate(int track,double tempo,double pitch)
/* METHOD */ int  pySetNormalize:audioSetNormalize(int track,int mode,int value)
/* METHOD */ int  pySetNormalize2:audioSetNormalize2(int track,int mode,int value,int level)
/* METHOD */ int  pySetDrc:audioSetDrc(int track,int enable)
/* METHOD */ int  pySetDrc2:audioSetDrc2(int track,int enable,int normalize,double nFloor,double attTime,double decTime,double ratio,double thresDB)
/* METHOD */ int  pySetEq:audioSetEq(int track,int enable,double low,double mid,double high,double lowMidCut,double midHighCut)
/* METHOD */ int  pySetChGains:audioSetChannelGains(int track,double frontLeft,double frontRight,double frontCenter,double sideLeft,double sideRight,double rearLeft,double rearRight,double rearCenter,double LFE)
/* METHOD */ int  pySetChDelays:audioSetChannelDelays(int track,int frontLeft,int frontRight,int frontCenter,int sideLeft,int sideRight,int rearLeft,int rearRight,int rearCenter,int LFE)
/* METHOD */ int  pySetChRemap:audioSetChannelRemap(int track,int enable, int frontLeft,int frontRight,int frontCenter,int sideLeft,int sideRight,int rearLeft,int rearRight,int rearCenter,int LFE)
/* METHOD */ int  pySetAudioShift:audioSetShift(int track,int enable,int value)
#
#  Audio info...
#
/* METHOD */ int pyGetNumberOfAudioTracks:audioTracksCount(void) 
/* METHOD */ int pyGetNumberOfAvailableAudioTracks:audioTotalTracksCount(void)
/* METHOD */ int pyGetAudioFrequency:audioFrequency( int track) 
/* METHOD */ int pyGetAudioChannels:audioChannels( int track) 
/* METHOD */ int pyGetAudioEncoding:audioEncoding( int track) 
/* METHOD */ int pyGetAudioBitrate:audioBitrate( int track) 
#
#
#              cname:pyname
#  Codec, container
/* METHOD */ int editor->setVideoCodec:videoCodec(str codec, couples) 
#/* METHOD */ int editor->videoCodecGui:videoCodecGui(str,couples)  # couples is OUT !
/* METHOD */ int editor->changeVideoParam:videoCodecChangeParam(str codec, couples) 
/* METHOD */ int editor->setVideoCodecProfile:videoCodecSetProfile(str codec, str profile) 
/* METHOD */ int editor->setAudioCodec:audioCodec(int track,str codec,  couples) 
/* METHOD */ int editor->setContainer:setContainer(str container, couples) 
/* METHOD */ int editor->addVideoFilter:addVideoFilter(str filter, couples) 
#
#  Save audio, video, images
#
/* METHOD */ int editor->saveAudio:saveAudio(int track,str fileName) 
/* METHOD */ int editor->saveFile:save(str fileName) 
/* METHOD */ int editor->saveImageJpg:saveJpeg(str fileName) 
/* METHOD */ int editor->saveImageBmp:saveBmp(str fileName) 
/* METHOD */ int editor->saveImagePng:savePng(str fileName)
#
#
# Seek
/* METHOD */ int editor->seekKeyFrame:seekKeyFrame(int count)
/* METHOD */ int editor->seekFrame:seekFrame(int count)
/* METHOD */ int editor->setCurrentFramePts:setCurrentPts(double pts)
/* METHOD */ void editor->seekBlackFrame:seekBlackFrame(int count)
#
#       Variables
#
/* ATTRIBUTES */ double markerA:editor->setMarkerAPts,editor->getMarkerAPts
/* ATTRIBUTES */ double markerB:editor->setMarkerBPts,editor->getMarkerBPts
# TODO /* ATTRIBUTES */ int    audioNormalizeMode:pySetNormalizeMode,pyGetNormalizeMode(int)
# TODO /* ATTRIBUTES */ int    audioNormalizeGain:pySetNormalizeValue,pyGetNormalizeValue(int)
